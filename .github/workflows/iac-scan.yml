name: Infrastructure Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  workflow_dispatch:
    runs-on: ubuntu-latest

    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run IAC scan and save logs
        run: |
          echo "Running scan..."
          ./scanner/scan.sh > scan_output.log 2>&1 || true
        continue-on-error: true

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build IAC-Scanner
        run: |
          go build -o iac-scanner

      - name: Run IAC-Scanner on target folder
        run: |
          ./iac-scanner ./test-files > scan-results.log

      - name: Display scan results
        run: |
          cat scan-results.log

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        with:
          name: iac-scan-report
          path: scan-results.log

      - name: Fail if HIGH severity issues are found
        run: |
          if grep -q "\[HIGH\]" scan-results.log; then
            echo "High severity issues detected. Failing the job!"
            exit 1
          fi

      - name: Upload full logs to Slack (if scan fails)
        if: always()
        run: |
          # Step 1: Get the upload URL from Slack
            UPLOAD_RESPONSE=$(curl -s \
           -X POST \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-Type: application/json; charset=utf-8" \
            -d "{\"filename\":\"scan-results.log\", \"length\":$(stat -c%s scan-results.log), \"channels\":\"${{ secrets.SLACK_CHANNEL_ID }}\"}" \
            https://slack.com/api/files.getUploadURLExternal)
          
          echo "Upload response: $UPLOAD_RESPONSE"
          
          # Parse the response to get the upload URL and file ID
          UPLOAD_URL=$(echo $UPLOAD_RESPONSE | jq -r '.upload_url')
          FILE_ID=$(echo $UPLOAD_RESPONSE | jq -r '.file_id')
          
          if [ "$UPLOAD_URL" == "null" ] || [ "$FILE_ID" == "null" ]; then
            echo "Failed to get upload URL from Slack. Response: $UPLOAD_RESPONSE"
            exit 1
          fi
          
          # Step 2: Upload the file to the provided URL
          curl -s \
            -X POST \
            -H "Content-Type: multipart/form-data" \
            -F "file=@scan-results.log" \
            "$UPLOAD_URL"
          
          # Step 3: Complete the upload process
          curl -s \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"files\":[\"$FILE_ID\"], \"initial_comment\":\"*IAC Scan Failed!*\nRepo: ${{ github.repository }}\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Full Workflow>\"}" \
            https://slack.com/api/files.completeUploadExternal